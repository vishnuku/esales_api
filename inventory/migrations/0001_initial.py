# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import jsonfield.fields
import mptt.fields
from django.conf import settings
import inventory.models


class Migration(migrations.Migration):

    dependencies = [
        ('integration', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AmazonOrders',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('amazonproduct', models.CharField(max_length=50, null=True, blank=True)),
                ('amazonorderid', models.CharField(max_length=50, null=True, db_index=True)),
                ('buyername', models.CharField(max_length=50, null=True)),
                ('buyeremail', models.EmailField(max_length=75, null=True)),
                ('ordertype', models.CharField(max_length=50, null=True, db_index=True)),
                ('numberofitemsshipped', models.SmallIntegerField(null=True)),
                ('numberofitemsunshipped', models.SmallIntegerField(null=True)),
                ('paymentmethod', models.CharField(max_length=50, null=True)),
                ('orderstatus', models.CharField(max_length=50, null=True)),
                ('saleschannel', models.CharField(max_length=50, null=True, db_index=True)),
                ('amount', models.CharField(max_length=50, null=True)),
                ('marketplaceid', models.CharField(max_length=50, null=True, db_index=True)),
                ('fulfillmentchannel', models.CharField(max_length=50, null=True)),
                ('shipservicelevel', models.CharField(max_length=50, null=True)),
                ('address', jsonfield.fields.JSONField()),
                ('purchasedate', models.DateTimeField(db_index=True, null=True, blank=True)),
                ('lastupdatedate', models.DateTimeField(db_index=True, null=True, blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True, db_index=True)),
                ('created_by', models.ForeignKey(related_name='created_by_amazonorders', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_amazonorders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AmazonProduct',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('item_name', models.CharField(default='', max_length=100, blank=True)),
                ('item_description', models.CharField(default='', max_length=100, blank=True)),
                ('listing_id', models.CharField(default='', max_length=100, blank=True)),
                ('seller_sku', models.CharField(default='', max_length=100, blank=True)),
                ('price', models.CharField(default='', max_length=100, blank=True)),
                ('quantity', models.CharField(default='', max_length=100, blank=True)),
                ('open_date', models.CharField(default='', max_length=100, blank=True)),
                ('image_url', models.CharField(default='', max_length=100, blank=True)),
                ('item_is_marketplace', models.CharField(default='', max_length=100, blank=True)),
                ('product_id_type', models.CharField(default='', max_length=100, blank=True)),
                ('zshop_shipping_fee', models.CharField(default='', max_length=100, blank=True)),
                ('item_note', models.CharField(default='', max_length=100, blank=True)),
                ('item_condition', models.CharField(default='', max_length=100, blank=True)),
                ('zshop_category1', models.CharField(default='', max_length=100, blank=True)),
                ('zshop_browse_path', models.CharField(default='', max_length=100, blank=True)),
                ('zshop_storefront_feature', models.CharField(default='', max_length=100, blank=True)),
                ('asin1', models.CharField(default='', max_length=100, blank=True)),
                ('asin2', models.CharField(default='', max_length=100, blank=True)),
                ('asin3', models.CharField(default='', max_length=100, blank=True)),
                ('will_ship_internationally', models.CharField(default='', max_length=100, blank=True)),
                ('expedited_shipping', models.CharField(default='', max_length=100, blank=True)),
                ('zshop_boldface', models.CharField(default='', max_length=100, blank=True)),
                ('bid_for_featured_placement', models.CharField(default='', max_length=100, blank=True)),
                ('add_delete', models.CharField(default='', max_length=100, blank=True)),
                ('pending_quantity', models.CharField(default='', max_length=100, blank=True)),
                ('fulfillment_channel', models.CharField(default='', max_length=100, blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('channel', models.ForeignKey(to='integration.Channel')),
                ('created_by', models.ForeignKey(related_name='created_by_user_amzp', to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=50, blank=True)),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
                ('created_by', models.ForeignKey(related_name='created_by_user_category', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(related_name='children', blank=True, to='inventory.Category', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_by_user_category', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ChannelCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('node_id', models.BigIntegerField()),
                ('node_path', models.CharField(max_length=200)),
                ('item_type_keyword', models.CharField(max_length=200)),
                ('channel', models.CharField(max_length=20)),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
                ('created_by', models.ForeignKey(related_name='created_by_channel_category', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(related_name='children', blank=True, to='inventory.ChannelCategory', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_by_channel_category', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CSV',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.FileField(max_length=200, upload_to='/home/ranjeet/PycharmProjects/esales_api/esales_api/media/csv/%Y-%m-%d', validators=[inventory.models.validate_file_extension])),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('created_by', models.ForeignKey(related_name='created_by_csv', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_csv', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_on',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('image', models.ImageField(upload_to='product/images/upload/%Y/%m/%d')),
                ('is_main', models.BooleanField(default=False)),
                ('status', models.SmallIntegerField(default=1, null=True, blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('created_by', models.ForeignKey(related_name='created_by_user_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_on',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(null=True, blank=True)),
                ('sku', models.CharField(unique=True, max_length=100)),
                ('ucodetype', models.CharField(blank=True, max_length=20, choices=[('ISBN', 'ISBN'), ('UPC', 'UPC'), ('EAN', 'EAN')])),
                ('ucodevalue', models.CharField(max_length=50, blank=True)),
                ('barcode', models.CharField(max_length=200, blank=True)),
                ('purchase_price', models.FloatField(default=0.0, blank=True)),
                ('retail_price', models.FloatField(default=0, blank=True)),
                ('tax_price', models.FloatField(default=0, blank=True)),
                ('stock_quantity', models.IntegerField(default=0, blank=True)),
                ('min_stock_quantity', models.IntegerField(default=0, blank=True)),
                ('sold_quantity', models.IntegerField(default=0)),
                ('pending_quantity', models.IntegerField(default=0)),
                ('image_url', models.CharField(default='', max_length=100, blank=True)),
                ('shipping_fee', models.CharField(default='', max_length=100, blank=True)),
                ('will_ship_internationally', models.CharField(default='', max_length=100, blank=True)),
                ('expedited_shipping', models.CharField(default='', max_length=100, blank=True)),
                ('brand', models.CharField(max_length=255, null=True, blank=True)),
                ('manufacturer', models.CharField(max_length=255, blank=True)),
                ('bullet_point', models.TextField(null=True, blank=True)),
                ('meta_data', models.TextField(blank=True)),
                ('origin', models.CharField(max_length=55, null=True, blank=True)),
                ('field1', models.CharField(max_length=50, null=True, blank=True)),
                ('field2', models.CharField(max_length=50, null=True, blank=True)),
                ('field3', models.CharField(max_length=50, null=True, blank=True)),
                ('field4', models.CharField(max_length=50, null=True, blank=True)),
                ('field5', models.CharField(max_length=50, null=True, blank=True)),
                ('field6', models.CharField(max_length=50, null=True, blank=True)),
                ('field7', models.CharField(max_length=50, null=True, blank=True)),
                ('field8', models.CharField(max_length=50, null=True, blank=True)),
                ('field9', models.CharField(max_length=50, null=True, blank=True)),
                ('field10', models.CharField(max_length=50, null=True, blank=True)),
                ('misc_data', jsonfield.fields.JSONField()),
                ('warehouse', jsonfield.fields.JSONField()),
                ('channel', models.CharField(max_length=50, null=True, blank=True)),
                ('product_type', models.CharField(default=1, max_length=5, blank=True, choices=[('1', 'Normal'), ('2', 'Bundle'), ('3', 'Variation Parent')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, to='inventory.Category', null=True)),
                ('created_by', models.ForeignKey(related_name='created_by_user_product', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_user_product', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Product_Bundle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('price', models.FloatField()),
                ('qty', models.SmallIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('created_by', models.ForeignKey(related_name='created_by_product_bundle', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(related_name='item_product', to='inventory.Product')),
                ('product', models.ForeignKey(related_name='product_product', to='inventory.Product')),
                ('updated_by', models.ForeignKey(related_name='updated_by_product_bundle', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductListingConfigurator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('marketplace', models.CharField(max_length=255)),
                ('marketplace_domain', models.CharField(max_length=255)),
                ('category3', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('category1', models.ForeignKey(related_name='category1_product_listing_conf', to='inventory.ChannelCategory')),
                ('category2', models.ForeignKey(related_name='category2_product_listing_conf', to='inventory.ChannelCategory')),
                ('created_by', models.ForeignKey(related_name='created_by_product_listing_conf1', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_product_listing_conf2', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.IntegerField(default=0)),
                ('status', models.CharField(default='', max_length=20, blank=True)),
                ('message', models.CharField(default='', max_length=50, blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('amazonorders', models.ForeignKey(related_name='productorder', to='inventory.AmazonOrders')),
                ('created_by', models.ForeignKey(related_name='created_by_product_order', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(to='inventory.Product')),
                ('updated_by', models.ForeignKey(related_name='updated_by_product_order', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=50)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sync',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('task', models.CharField(max_length=255)),
                ('state', models.PositiveSmallIntegerField()),
                ('status', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('channel', models.ForeignKey(to='integration.Channel')),
                ('created_by', models.ForeignKey(related_name='created_by_user_sync', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_user_sync', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=105)),
                ('address', models.CharField(max_length=255, blank=True)),
                ('town', models.CharField(max_length=105, blank=True)),
                ('country', models.CharField(max_length=105, blank=True)),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('created_by', models.ForeignKey(related_name='created_by_warehouse', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name='updated_by_warehouse', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WarehouseBin',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('min_stock_quantity', models.IntegerField(default=0)),
                ('sold_quantity', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=105)),
                ('status', models.SmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, auto_now_add=True)),
                ('created_by', models.ForeignKey(related_name='created_by_warehouse_product', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, to='inventory.Product', null=True)),
                ('updated_by', models.ForeignKey(related_name='updated_by_warehouse_product', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(to='inventory.Warehouse')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='warehousebin',
            unique_together=set([('warehouse', 'name')]),
        ),
        migrations.AddField(
            model_name='productorder',
            name='warehousebin',
            field=models.ForeignKey(blank=True, to='inventory.WarehouseBin', null=True),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='productorder',
            unique_together=set([('product', 'amazonorders')]),
        ),
        migrations.AlterUniqueTogether(
            name='product_bundle',
            unique_together=set([('product', 'item')]),
        ),
        migrations.AddField(
            model_name='images',
            name='product',
            field=models.ForeignKey(related_name='images', default=1, to='inventory.Product'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='images',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_by_user_images', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='images',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='amazonproduct',
            name='product',
            field=models.ForeignKey(to='inventory.Product'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='amazonproduct',
            name='updated_by',
            field=models.ForeignKey(related_name='updated_by_user_amzp', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='amazonproduct',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
    ]
